ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB48:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  48:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** UART_HandleTypeDef huart1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** static void MX_ADC_Init(void);
  60:Core/Src/main.c **** static void MX_I2C1_Init(void);
  61:Core/Src/main.c **** static void MX_TIM1_Init(void);
  62:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  63:Core/Src/main.c **** static void MX_TIM14_Init(void);
  64:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.c **** uint16_t mymap(uint16_t x, uint16_t in_min, uint16_t in_max, uint16_t out_min, uint16_t out_max)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c ****   return (x - in_min) * (out_max - out_min)/(in_max - in_min) + out_min;
  73:Core/Src/main.c **** }
  74:Core/Src/main.c **** /* USER CODE END 0 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /**
  77:Core/Src/main.c ****   * @brief  The application entry point.
  78:Core/Src/main.c ****   * @retval int
  79:Core/Src/main.c ****   */
  80:Core/Src/main.c **** int main(void)
  81:Core/Src/main.c **** {
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  83:Core/Src/main.c ****   /* USER CODE END 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Core/Src/main.c ****   HAL_Init();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Configure the system clock */
  95:Core/Src/main.c ****   SystemClock_Config();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Initialize all configured peripherals */
 102:Core/Src/main.c ****   MX_GPIO_Init();
 103:Core/Src/main.c ****   MX_ADC_Init();
 104:Core/Src/main.c ****   MX_I2C1_Init();
 105:Core/Src/main.c ****   MX_TIM1_Init();
 106:Core/Src/main.c ****   MX_USART1_UART_Init();
 107:Core/Src/main.c ****   MX_TIM14_Init();
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 109:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 110:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 111:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   uint16_t rawadc, intensity, count = 0;
 114:Core/Src/main.c ****   /* USER CODE END 2 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Infinite loop */
 117:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 118:Core/Src/main.c ****   while (1)
 119:Core/Src/main.c ****   {
 120:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 121:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc,HAL_MAX_DELAY);
 122:Core/Src/main.c ****     rawadc = HAL_ADC_GetValue(&hadc);
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     intensity = mymap(rawadc, 0, 4095, 0, 5000);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****     htim14.Instance->CCR1 = intensity;
 127:Core/Src/main.c **** 	  htim1.Instance->CCR1 = 2500;
 128:Core/Src/main.c **** 	  htim1.Instance->CCR2 = intensity;
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****     if(count++ > 999){
 131:Core/Src/main.c ****       count = 0;
 132:Core/Src/main.c ****       HAL_GPIO_TogglePin(LED_G0_GPIO_Port,LED_G0_Pin);
 133:Core/Src/main.c ****     }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****     HAL_Delay(1);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE END WHILE */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c ****   /* USER CODE END 3 */
 142:Core/Src/main.c **** }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** /**
 145:Core/Src/main.c ****   * @brief System Clock Configuration
 146:Core/Src/main.c ****   * @retval None
 147:Core/Src/main.c ****   */
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 4


 148:Core/Src/main.c **** void SystemClock_Config(void)
 149:Core/Src/main.c **** {
 150:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 151:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 152:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 155:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI14|RCC_OSCILLATORTYPE_HSE;
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166:Core/Src/main.c ****   {
 167:Core/Src/main.c ****     Error_Handler();
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     Error_Handler();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1;
 182:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 183:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_SYSCLK;
 184:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /**
 191:Core/Src/main.c ****   * @brief ADC Initialization Function
 192:Core/Src/main.c ****   * @param None
 193:Core/Src/main.c ****   * @retval None
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c **** static void MX_ADC_Init(void)
 196:Core/Src/main.c **** {
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 207:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c ****   hadc.Instance = ADC1;
 210:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 211:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 212:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 213:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 214:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 215:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 216:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 217:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 218:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 219:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 220:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 221:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 222:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 223:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 230:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 231:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 232:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** }
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** /**
 243:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 244:Core/Src/main.c ****   * @param None
 245:Core/Src/main.c ****   * @retval None
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c **** static void MX_I2C1_Init(void)
 248:Core/Src/main.c **** {
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 257:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 258:Core/Src/main.c ****   hi2c1.Init.Timing = 0x20303E5D;
 259:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 260:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 261:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 6


 262:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 263:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 264:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 265:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 266:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     Error_Handler();
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c ****   /** Configure Analogue filter
 271:Core/Src/main.c ****   */
 272:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /** Configure Digital filter
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****     Error_Handler();
 281:Core/Src/main.c ****   }
 282:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /**
 289:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 290:Core/Src/main.c ****   * @param None
 291:Core/Src/main.c ****   * @retval None
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c **** static void MX_TIM1_Init(void)
 294:Core/Src/main.c **** {
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 301:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 302:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 303:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 308:Core/Src/main.c ****   htim1.Instance = TIM1;
 309:Core/Src/main.c ****   htim1.Init.Prescaler = 96-1;
 310:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 311:Core/Src/main.c ****   htim1.Init.Period = 5000-1;
 312:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 313:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 314:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 315:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 316:Core/Src/main.c ****   {
 317:Core/Src/main.c ****     Error_Handler();
 318:Core/Src/main.c ****   }
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 7


 319:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 320:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 321:Core/Src/main.c ****   {
 322:Core/Src/main.c ****     Error_Handler();
 323:Core/Src/main.c ****   }
 324:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 329:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 330:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 331:Core/Src/main.c ****   {
 332:Core/Src/main.c ****     Error_Handler();
 333:Core/Src/main.c ****   }
 334:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 335:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 336:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 337:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 338:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 339:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 340:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 341:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 342:Core/Src/main.c ****   {
 343:Core/Src/main.c ****     Error_Handler();
 344:Core/Src/main.c ****   }
 345:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 350:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 351:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 352:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 354:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 355:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 356:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 357:Core/Src/main.c ****   {
 358:Core/Src/main.c ****     Error_Handler();
 359:Core/Src/main.c ****   }
 360:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 363:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** }
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** /**
 368:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 369:Core/Src/main.c ****   * @param None
 370:Core/Src/main.c ****   * @retval None
 371:Core/Src/main.c ****   */
 372:Core/Src/main.c **** static void MX_TIM14_Init(void)
 373:Core/Src/main.c **** {
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 8


 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 384:Core/Src/main.c ****   htim14.Instance = TIM14;
 385:Core/Src/main.c ****   htim14.Init.Prescaler = 96-1;
 386:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 387:Core/Src/main.c ****   htim14.Init.Period = 5000-1;
 388:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 389:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 390:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 391:Core/Src/main.c ****   {
 392:Core/Src/main.c ****     Error_Handler();
 393:Core/Src/main.c ****   }
 394:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 395:Core/Src/main.c ****   {
 396:Core/Src/main.c ****     Error_Handler();
 397:Core/Src/main.c ****   }
 398:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 399:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 400:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 401:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 402:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 403:Core/Src/main.c ****   {
 404:Core/Src/main.c ****     Error_Handler();
 405:Core/Src/main.c ****   }
 406:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 409:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim14);
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** }
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** /**
 414:Core/Src/main.c ****   * @brief USART1 Initialization Function
 415:Core/Src/main.c ****   * @param None
 416:Core/Src/main.c ****   * @retval None
 417:Core/Src/main.c ****   */
 418:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 419:Core/Src/main.c **** {
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 428:Core/Src/main.c ****   huart1.Instance = USART1;
 429:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 430:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 431:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 432:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 9


 433:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 434:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 435:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 436:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 437:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 438:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****     Error_Handler();
 441:Core/Src/main.c ****   }
 442:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** }
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** /**
 449:Core/Src/main.c ****   * @brief GPIO Initialization Function
 450:Core/Src/main.c ****   * @param None
 451:Core/Src/main.c ****   * @retval None
 452:Core/Src/main.c ****   */
 453:Core/Src/main.c **** static void MX_GPIO_Init(void)
 454:Core/Src/main.c **** {
  26              		.loc 1 454 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 455:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 455 3 view .LVU1
  40              		.loc 1 455 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 458:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  46              		.loc 1 458 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 458 3 view .LVU4
  49              		.loc 1 458 3 view .LVU5
  50 000e 204B     		ldr	r3, .L2
  51 0010 5969     		ldr	r1, [r3, #20]
  52 0012 8020     		movs	r0, #128
  53 0014 C003     		lsls	r0, r0, #15
  54 0016 0143     		orrs	r1, r0
  55 0018 5961     		str	r1, [r3, #20]
  56              		.loc 1 458 3 view .LVU6
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 10


  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 0240     		ands	r2, r0
  59 001e 0092     		str	r2, [sp]
  60              		.loc 1 458 3 view .LVU7
  61 0020 009A     		ldr	r2, [sp]
  62              	.LBE2:
  63              		.loc 1 458 3 view .LVU8
 459:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 459 3 view .LVU9
  65              	.LBB3:
  66              		.loc 1 459 3 view .LVU10
  67              		.loc 1 459 3 view .LVU11
  68 0022 5969     		ldr	r1, [r3, #20]
  69 0024 8020     		movs	r0, #128
  70 0026 8002     		lsls	r0, r0, #10
  71 0028 0143     		orrs	r1, r0
  72 002a 5961     		str	r1, [r3, #20]
  73              		.loc 1 459 3 view .LVU12
  74 002c 5A69     		ldr	r2, [r3, #20]
  75 002e 0240     		ands	r2, r0
  76 0030 0192     		str	r2, [sp, #4]
  77              		.loc 1 459 3 view .LVU13
  78 0032 019A     		ldr	r2, [sp, #4]
  79              	.LBE3:
  80              		.loc 1 459 3 view .LVU14
 460:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 460 3 view .LVU15
  82              	.LBB4:
  83              		.loc 1 460 3 view .LVU16
  84              		.loc 1 460 3 view .LVU17
  85 0034 5A69     		ldr	r2, [r3, #20]
  86 0036 8021     		movs	r1, #128
  87 0038 C902     		lsls	r1, r1, #11
  88 003a 0A43     		orrs	r2, r1
  89 003c 5A61     		str	r2, [r3, #20]
  90              		.loc 1 460 3 view .LVU18
  91 003e 5B69     		ldr	r3, [r3, #20]
  92 0040 0B40     		ands	r3, r1
  93 0042 0293     		str	r3, [sp, #8]
  94              		.loc 1 460 3 view .LVU19
  95 0044 029B     		ldr	r3, [sp, #8]
  96              	.LBE4:
  97              		.loc 1 460 3 view .LVU20
 461:Core/Src/main.c **** 
 462:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 463:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, LED_G0_Pin|LED_R0_Pin, GPIO_PIN_RESET);
  98              		.loc 1 463 3 view .LVU21
  99 0046 9025     		movs	r5, #144
 100 0048 ED05     		lsls	r5, r5, #23
 101 004a 0022     		movs	r2, #0
 102 004c 2821     		movs	r1, #40
 103 004e 2800     		movs	r0, r5
 104 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 105              	.LVL1:
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /*Configure GPIO pins : LED_G0_Pin LED_R0_Pin */
 466:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_G0_Pin|LED_R0_Pin;
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 11


 106              		.loc 1 466 3 view .LVU22
 107              		.loc 1 466 23 is_stmt 0 view .LVU23
 108 0054 2823     		movs	r3, #40
 109 0056 0393     		str	r3, [sp, #12]
 467:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 110              		.loc 1 467 3 is_stmt 1 view .LVU24
 111              		.loc 1 467 24 is_stmt 0 view .LVU25
 112 0058 273B     		subs	r3, r3, #39
 113 005a 0493     		str	r3, [sp, #16]
 468:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 468 3 is_stmt 1 view .LVU26
 115              		.loc 1 468 24 is_stmt 0 view .LVU27
 116 005c 0024     		movs	r4, #0
 117 005e 0594     		str	r4, [sp, #20]
 469:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 118              		.loc 1 469 3 is_stmt 1 view .LVU28
 119              		.loc 1 469 25 is_stmt 0 view .LVU29
 120 0060 0694     		str	r4, [sp, #24]
 470:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 121              		.loc 1 470 3 is_stmt 1 view .LVU30
 122 0062 03A9     		add	r1, sp, #12
 123 0064 2800     		movs	r0, r5
 124 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 125              	.LVL2:
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****   /*Configure GPIO pin : REED_SW_Pin */
 473:Core/Src/main.c ****   GPIO_InitStruct.Pin = REED_SW_Pin;
 126              		.loc 1 473 3 view .LVU31
 127              		.loc 1 473 23 is_stmt 0 view .LVU32
 128 006a 4023     		movs	r3, #64
 129 006c 0393     		str	r3, [sp, #12]
 474:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 130              		.loc 1 474 3 is_stmt 1 view .LVU33
 131              		.loc 1 474 24 is_stmt 0 view .LVU34
 132 006e 094B     		ldr	r3, .L2+4
 133 0070 0493     		str	r3, [sp, #16]
 475:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 134              		.loc 1 475 3 is_stmt 1 view .LVU35
 135              		.loc 1 475 24 is_stmt 0 view .LVU36
 136 0072 0594     		str	r4, [sp, #20]
 476:Core/Src/main.c ****   HAL_GPIO_Init(REED_SW_GPIO_Port, &GPIO_InitStruct);
 137              		.loc 1 476 3 is_stmt 1 view .LVU37
 138 0074 03A9     		add	r1, sp, #12
 139 0076 2800     		movs	r0, r5
 140 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL3:
 477:Core/Src/main.c **** 
 478:Core/Src/main.c ****   /*Configure GPIO pin : PGOOD_Pin */
 479:Core/Src/main.c ****   GPIO_InitStruct.Pin = PGOOD_Pin;
 142              		.loc 1 479 3 view .LVU38
 143              		.loc 1 479 23 is_stmt 0 view .LVU39
 144 007c 8023     		movs	r3, #128
 145 007e 0393     		str	r3, [sp, #12]
 480:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 146              		.loc 1 480 3 is_stmt 1 view .LVU40
 147              		.loc 1 480 24 is_stmt 0 view .LVU41
 148 0080 0494     		str	r4, [sp, #16]
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 12


 481:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 149              		.loc 1 481 3 is_stmt 1 view .LVU42
 150              		.loc 1 481 24 is_stmt 0 view .LVU43
 151 0082 0594     		str	r4, [sp, #20]
 482:Core/Src/main.c ****   HAL_GPIO_Init(PGOOD_GPIO_Port, &GPIO_InitStruct);
 152              		.loc 1 482 3 is_stmt 1 view .LVU44
 153 0084 03A9     		add	r1, sp, #12
 154 0086 2800     		movs	r0, r5
 155 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 156              	.LVL4:
 483:Core/Src/main.c **** 
 484:Core/Src/main.c **** }
 157              		.loc 1 484 1 is_stmt 0 view .LVU45
 158 008c 09B0     		add	sp, sp, #36
 159              		@ sp needed
 160 008e 30BD     		pop	{r4, r5, pc}
 161              	.L3:
 162              		.align	2
 163              	.L2:
 164 0090 00100240 		.word	1073876992
 165 0094 00001110 		.word	269549568
 166              		.cfi_endproc
 167              	.LFE48:
 169              		.section	.text.MX_ADC_Init,"ax",%progbits
 170              		.align	1
 171              		.syntax unified
 172              		.code	16
 173              		.thumb_func
 174              		.fpu softvfp
 176              	MX_ADC_Init:
 177              	.LFB43:
 196:Core/Src/main.c **** 
 178              		.loc 1 196 1 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 16
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 10B5     		push	{r4, lr}
 183              	.LCFI2:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 187 0002 84B0     		sub	sp, sp, #16
 188              	.LCFI3:
 189              		.cfi_def_cfa_offset 24
 202:Core/Src/main.c **** 
 190              		.loc 1 202 3 view .LVU47
 202:Core/Src/main.c **** 
 191              		.loc 1 202 26 is_stmt 0 view .LVU48
 192 0004 0C22     		movs	r2, #12
 193 0006 0021     		movs	r1, #0
 194 0008 01A8     		add	r0, sp, #4
 195 000a FFF7FEFF 		bl	memset
 196              	.LVL5:
 209:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 197              		.loc 1 209 3 is_stmt 1 view .LVU49
 209:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 198              		.loc 1 209 17 is_stmt 0 view .LVU50
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 13


 199 000e 144C     		ldr	r4, .L5
 200 0010 144B     		ldr	r3, .L5+4
 201 0012 2360     		str	r3, [r4]
 210:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 202              		.loc 1 210 3 is_stmt 1 view .LVU51
 210:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 203              		.loc 1 210 28 is_stmt 0 view .LVU52
 204 0014 0023     		movs	r3, #0
 205 0016 6360     		str	r3, [r4, #4]
 211:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 206              		.loc 1 211 3 is_stmt 1 view .LVU53
 211:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 207              		.loc 1 211 24 is_stmt 0 view .LVU54
 208 0018 A360     		str	r3, [r4, #8]
 212:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 209              		.loc 1 212 3 is_stmt 1 view .LVU55
 212:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 210              		.loc 1 212 23 is_stmt 0 view .LVU56
 211 001a E360     		str	r3, [r4, #12]
 213:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 212              		.loc 1 213 3 is_stmt 1 view .LVU57
 213:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 213              		.loc 1 213 26 is_stmt 0 view .LVU58
 214 001c 0122     		movs	r2, #1
 215 001e 2261     		str	r2, [r4, #16]
 214:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 216              		.loc 1 214 3 is_stmt 1 view .LVU59
 214:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 217              		.loc 1 214 26 is_stmt 0 view .LVU60
 218 0020 0421     		movs	r1, #4
 219 0022 6161     		str	r1, [r4, #20]
 215:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 220              		.loc 1 215 3 is_stmt 1 view .LVU61
 215:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 221              		.loc 1 215 30 is_stmt 0 view .LVU62
 222 0024 2376     		strb	r3, [r4, #24]
 216:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 223              		.loc 1 216 3 is_stmt 1 view .LVU63
 216:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 224              		.loc 1 216 34 is_stmt 0 view .LVU64
 225 0026 6376     		strb	r3, [r4, #25]
 217:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 226              		.loc 1 217 3 is_stmt 1 view .LVU65
 217:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 227              		.loc 1 217 32 is_stmt 0 view .LVU66
 228 0028 A376     		strb	r3, [r4, #26]
 218:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 229              		.loc 1 218 3 is_stmt 1 view .LVU67
 218:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 230              		.loc 1 218 35 is_stmt 0 view .LVU68
 231 002a E376     		strb	r3, [r4, #27]
 219:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 232              		.loc 1 219 3 is_stmt 1 view .LVU69
 219:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 233              		.loc 1 219 30 is_stmt 0 view .LVU70
 234 002c C221     		movs	r1, #194
 235 002e FF31     		adds	r1, r1, #255
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 14


 236 0030 E161     		str	r1, [r4, #28]
 220:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 237              		.loc 1 220 3 is_stmt 1 view .LVU71
 220:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 238              		.loc 1 220 34 is_stmt 0 view .LVU72
 239 0032 2362     		str	r3, [r4, #32]
 221:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 240              		.loc 1 221 3 is_stmt 1 view .LVU73
 221:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 241              		.loc 1 221 35 is_stmt 0 view .LVU74
 242 0034 9E39     		subs	r1, r1, #158
 243 0036 FF39     		subs	r1, r1, #255
 244 0038 6354     		strb	r3, [r4, r1]
 222:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 245              		.loc 1 222 3 is_stmt 1 view .LVU75
 222:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 246              		.loc 1 222 21 is_stmt 0 view .LVU76
 247 003a A262     		str	r2, [r4, #40]
 223:Core/Src/main.c ****   {
 248              		.loc 1 223 3 is_stmt 1 view .LVU77
 223:Core/Src/main.c ****   {
 249              		.loc 1 223 7 is_stmt 0 view .LVU78
 250 003c 2000     		movs	r0, r4
 251 003e FFF7FEFF 		bl	HAL_ADC_Init
 252              	.LVL6:
 229:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 253              		.loc 1 229 3 is_stmt 1 view .LVU79
 229:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 254              		.loc 1 229 19 is_stmt 0 view .LVU80
 255 0042 0223     		movs	r3, #2
 256 0044 0193     		str	r3, [sp, #4]
 230:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 257              		.loc 1 230 3 is_stmt 1 view .LVU81
 230:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 258              		.loc 1 230 16 is_stmt 0 view .LVU82
 259 0046 8023     		movs	r3, #128
 260 0048 5B01     		lsls	r3, r3, #5
 261 004a 0293     		str	r3, [sp, #8]
 231:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 262              		.loc 1 231 3 is_stmt 1 view .LVU83
 231:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 263              		.loc 1 231 24 is_stmt 0 view .LVU84
 264 004c 8023     		movs	r3, #128
 265 004e 5B05     		lsls	r3, r3, #21
 266 0050 0393     		str	r3, [sp, #12]
 232:Core/Src/main.c ****   {
 267              		.loc 1 232 3 is_stmt 1 view .LVU85
 232:Core/Src/main.c ****   {
 268              		.loc 1 232 7 is_stmt 0 view .LVU86
 269 0052 01A9     		add	r1, sp, #4
 270 0054 2000     		movs	r0, r4
 271 0056 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 272              	.LVL7:
 240:Core/Src/main.c **** 
 273              		.loc 1 240 1 view .LVU87
 274 005a 04B0     		add	sp, sp, #16
 275              		@ sp needed
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 15


 276 005c 10BD     		pop	{r4, pc}
 277              	.L6:
 278 005e C046     		.align	2
 279              	.L5:
 280 0060 00000000 		.word	hadc
 281 0064 00240140 		.word	1073816576
 282              		.cfi_endproc
 283              	.LFE43:
 285              		.section	.text.MX_I2C1_Init,"ax",%progbits
 286              		.align	1
 287              		.syntax unified
 288              		.code	16
 289              		.thumb_func
 290              		.fpu softvfp
 292              	MX_I2C1_Init:
 293              	.LFB44:
 248:Core/Src/main.c **** 
 294              		.loc 1 248 1 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 10B5     		push	{r4, lr}
 299              	.LCFI4:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 4, -8
 302              		.cfi_offset 14, -4
 257:Core/Src/main.c ****   hi2c1.Init.Timing = 0x20303E5D;
 303              		.loc 1 257 3 view .LVU89
 257:Core/Src/main.c ****   hi2c1.Init.Timing = 0x20303E5D;
 304              		.loc 1 257 18 is_stmt 0 view .LVU90
 305 0002 0D4C     		ldr	r4, .L8
 306 0004 0D4B     		ldr	r3, .L8+4
 307 0006 2360     		str	r3, [r4]
 258:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 308              		.loc 1 258 3 is_stmt 1 view .LVU91
 258:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 309              		.loc 1 258 21 is_stmt 0 view .LVU92
 310 0008 0D4B     		ldr	r3, .L8+8
 311 000a 6360     		str	r3, [r4, #4]
 259:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 312              		.loc 1 259 3 is_stmt 1 view .LVU93
 259:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 313              		.loc 1 259 26 is_stmt 0 view .LVU94
 314 000c 0023     		movs	r3, #0
 315 000e A360     		str	r3, [r4, #8]
 260:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 316              		.loc 1 260 3 is_stmt 1 view .LVU95
 260:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 317              		.loc 1 260 29 is_stmt 0 view .LVU96
 318 0010 0122     		movs	r2, #1
 319 0012 E260     		str	r2, [r4, #12]
 261:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 320              		.loc 1 261 3 is_stmt 1 view .LVU97
 261:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 321              		.loc 1 261 30 is_stmt 0 view .LVU98
 322 0014 2361     		str	r3, [r4, #16]
 262:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 16


 323              		.loc 1 262 3 is_stmt 1 view .LVU99
 262:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 324              		.loc 1 262 26 is_stmt 0 view .LVU100
 325 0016 6361     		str	r3, [r4, #20]
 263:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 326              		.loc 1 263 3 is_stmt 1 view .LVU101
 263:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 327              		.loc 1 263 31 is_stmt 0 view .LVU102
 328 0018 A361     		str	r3, [r4, #24]
 264:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 329              		.loc 1 264 3 is_stmt 1 view .LVU103
 264:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 330              		.loc 1 264 30 is_stmt 0 view .LVU104
 331 001a E361     		str	r3, [r4, #28]
 265:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 332              		.loc 1 265 3 is_stmt 1 view .LVU105
 265:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 333              		.loc 1 265 28 is_stmt 0 view .LVU106
 334 001c 2362     		str	r3, [r4, #32]
 266:Core/Src/main.c ****   {
 335              		.loc 1 266 3 is_stmt 1 view .LVU107
 266:Core/Src/main.c ****   {
 336              		.loc 1 266 7 is_stmt 0 view .LVU108
 337 001e 2000     		movs	r0, r4
 338 0020 FFF7FEFF 		bl	HAL_I2C_Init
 339              	.LVL8:
 272:Core/Src/main.c ****   {
 340              		.loc 1 272 3 is_stmt 1 view .LVU109
 272:Core/Src/main.c ****   {
 341              		.loc 1 272 7 is_stmt 0 view .LVU110
 342 0024 0021     		movs	r1, #0
 343 0026 2000     		movs	r0, r4
 344 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 345              	.LVL9:
 278:Core/Src/main.c ****   {
 346              		.loc 1 278 3 is_stmt 1 view .LVU111
 278:Core/Src/main.c ****   {
 347              		.loc 1 278 7 is_stmt 0 view .LVU112
 348 002c 0021     		movs	r1, #0
 349 002e 2000     		movs	r0, r4
 350 0030 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 351              	.LVL10:
 286:Core/Src/main.c **** 
 352              		.loc 1 286 1 view .LVU113
 353              		@ sp needed
 354 0034 10BD     		pop	{r4, pc}
 355              	.L9:
 356 0036 C046     		.align	2
 357              	.L8:
 358 0038 00000000 		.word	hi2c1
 359 003c 00540040 		.word	1073763328
 360 0040 5D3E3020 		.word	540032605
 361              		.cfi_endproc
 362              	.LFE44:
 364              		.section	.text.MX_TIM1_Init,"ax",%progbits
 365              		.align	1
 366              		.syntax unified
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 17


 367              		.code	16
 368              		.thumb_func
 369              		.fpu softvfp
 371              	MX_TIM1_Init:
 372              	.LFB45:
 294:Core/Src/main.c **** 
 373              		.loc 1 294 1 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 88
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377 0000 30B5     		push	{r4, r5, lr}
 378              	.LCFI5:
 379              		.cfi_def_cfa_offset 12
 380              		.cfi_offset 4, -12
 381              		.cfi_offset 5, -8
 382              		.cfi_offset 14, -4
 383 0002 97B0     		sub	sp, sp, #92
 384              	.LCFI6:
 385              		.cfi_def_cfa_offset 104
 300:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 386              		.loc 1 300 3 view .LVU115
 300:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 387              		.loc 1 300 26 is_stmt 0 view .LVU116
 388 0004 1022     		movs	r2, #16
 389 0006 0021     		movs	r1, #0
 390 0008 12A8     		add	r0, sp, #72
 391 000a FFF7FEFF 		bl	memset
 392              	.LVL11:
 301:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 393              		.loc 1 301 3 is_stmt 1 view .LVU117
 301:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 394              		.loc 1 301 27 is_stmt 0 view .LVU118
 395 000e 0822     		movs	r2, #8
 396 0010 0021     		movs	r1, #0
 397 0012 10A8     		add	r0, sp, #64
 398 0014 FFF7FEFF 		bl	memset
 399              	.LVL12:
 302:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 400              		.loc 1 302 3 is_stmt 1 view .LVU119
 302:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 401              		.loc 1 302 22 is_stmt 0 view .LVU120
 402 0018 1C22     		movs	r2, #28
 403 001a 0021     		movs	r1, #0
 404 001c 09A8     		add	r0, sp, #36
 405 001e FFF7FEFF 		bl	memset
 406              	.LVL13:
 303:Core/Src/main.c **** 
 407              		.loc 1 303 3 is_stmt 1 view .LVU121
 303:Core/Src/main.c **** 
 408              		.loc 1 303 34 is_stmt 0 view .LVU122
 409 0022 2022     		movs	r2, #32
 410 0024 0021     		movs	r1, #0
 411 0026 01A8     		add	r0, sp, #4
 412 0028 FFF7FEFF 		bl	memset
 413              	.LVL14:
 308:Core/Src/main.c ****   htim1.Init.Prescaler = 96-1;
 414              		.loc 1 308 3 is_stmt 1 view .LVU123
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 18


 308:Core/Src/main.c ****   htim1.Init.Prescaler = 96-1;
 415              		.loc 1 308 18 is_stmt 0 view .LVU124
 416 002c 214D     		ldr	r5, .L11
 417 002e 224B     		ldr	r3, .L11+4
 418 0030 2B60     		str	r3, [r5]
 309:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 419              		.loc 1 309 3 is_stmt 1 view .LVU125
 309:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 420              		.loc 1 309 24 is_stmt 0 view .LVU126
 421 0032 5F23     		movs	r3, #95
 422 0034 6B60     		str	r3, [r5, #4]
 310:Core/Src/main.c ****   htim1.Init.Period = 5000-1;
 423              		.loc 1 310 3 is_stmt 1 view .LVU127
 310:Core/Src/main.c ****   htim1.Init.Period = 5000-1;
 424              		.loc 1 310 26 is_stmt 0 view .LVU128
 425 0036 0024     		movs	r4, #0
 426 0038 AC60     		str	r4, [r5, #8]
 311:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 427              		.loc 1 311 3 is_stmt 1 view .LVU129
 311:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 428              		.loc 1 311 21 is_stmt 0 view .LVU130
 429 003a 204B     		ldr	r3, .L11+8
 430 003c EB60     		str	r3, [r5, #12]
 312:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 431              		.loc 1 312 3 is_stmt 1 view .LVU131
 312:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 432              		.loc 1 312 28 is_stmt 0 view .LVU132
 433 003e 2C61     		str	r4, [r5, #16]
 313:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 434              		.loc 1 313 3 is_stmt 1 view .LVU133
 313:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 435              		.loc 1 313 32 is_stmt 0 view .LVU134
 436 0040 6C61     		str	r4, [r5, #20]
 314:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 437              		.loc 1 314 3 is_stmt 1 view .LVU135
 314:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 438              		.loc 1 314 32 is_stmt 0 view .LVU136
 439 0042 AC61     		str	r4, [r5, #24]
 315:Core/Src/main.c ****   {
 440              		.loc 1 315 3 is_stmt 1 view .LVU137
 315:Core/Src/main.c ****   {
 441              		.loc 1 315 7 is_stmt 0 view .LVU138
 442 0044 2800     		movs	r0, r5
 443 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 444              	.LVL15:
 319:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 445              		.loc 1 319 3 is_stmt 1 view .LVU139
 319:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 446              		.loc 1 319 34 is_stmt 0 view .LVU140
 447 004a 8023     		movs	r3, #128
 448 004c 5B01     		lsls	r3, r3, #5
 449 004e 1293     		str	r3, [sp, #72]
 320:Core/Src/main.c ****   {
 450              		.loc 1 320 3 is_stmt 1 view .LVU141
 320:Core/Src/main.c ****   {
 451              		.loc 1 320 7 is_stmt 0 view .LVU142
 452 0050 12A9     		add	r1, sp, #72
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 19


 453 0052 2800     		movs	r0, r5
 454 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 455              	.LVL16:
 324:Core/Src/main.c ****   {
 456              		.loc 1 324 3 is_stmt 1 view .LVU143
 324:Core/Src/main.c ****   {
 457              		.loc 1 324 7 is_stmt 0 view .LVU144
 458 0058 2800     		movs	r0, r5
 459 005a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 460              	.LVL17:
 328:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 461              		.loc 1 328 3 is_stmt 1 view .LVU145
 328:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 462              		.loc 1 328 37 is_stmt 0 view .LVU146
 463 005e 1094     		str	r4, [sp, #64]
 329:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 464              		.loc 1 329 3 is_stmt 1 view .LVU147
 329:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 465              		.loc 1 329 33 is_stmt 0 view .LVU148
 466 0060 1194     		str	r4, [sp, #68]
 330:Core/Src/main.c ****   {
 467              		.loc 1 330 3 is_stmt 1 view .LVU149
 330:Core/Src/main.c ****   {
 468              		.loc 1 330 7 is_stmt 0 view .LVU150
 469 0062 10A9     		add	r1, sp, #64
 470 0064 2800     		movs	r0, r5
 471 0066 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 472              	.LVL18:
 334:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 473              		.loc 1 334 3 is_stmt 1 view .LVU151
 334:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 474              		.loc 1 334 20 is_stmt 0 view .LVU152
 475 006a 6023     		movs	r3, #96
 476 006c 0993     		str	r3, [sp, #36]
 335:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 477              		.loc 1 335 3 is_stmt 1 view .LVU153
 335:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 478              		.loc 1 335 19 is_stmt 0 view .LVU154
 479 006e 0A94     		str	r4, [sp, #40]
 336:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 480              		.loc 1 336 3 is_stmt 1 view .LVU155
 336:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 481              		.loc 1 336 24 is_stmt 0 view .LVU156
 482 0070 0B94     		str	r4, [sp, #44]
 337:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 483              		.loc 1 337 3 is_stmt 1 view .LVU157
 337:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 484              		.loc 1 337 25 is_stmt 0 view .LVU158
 485 0072 0C94     		str	r4, [sp, #48]
 338:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 486              		.loc 1 338 3 is_stmt 1 view .LVU159
 338:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 487              		.loc 1 338 24 is_stmt 0 view .LVU160
 488 0074 0D94     		str	r4, [sp, #52]
 339:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 489              		.loc 1 339 3 is_stmt 1 view .LVU161
 339:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 20


 490              		.loc 1 339 25 is_stmt 0 view .LVU162
 491 0076 0E94     		str	r4, [sp, #56]
 340:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 492              		.loc 1 340 3 is_stmt 1 view .LVU163
 340:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 493              		.loc 1 340 26 is_stmt 0 view .LVU164
 494 0078 0F94     		str	r4, [sp, #60]
 341:Core/Src/main.c ****   {
 495              		.loc 1 341 3 is_stmt 1 view .LVU165
 341:Core/Src/main.c ****   {
 496              		.loc 1 341 7 is_stmt 0 view .LVU166
 497 007a 0022     		movs	r2, #0
 498 007c 09A9     		add	r1, sp, #36
 499 007e 2800     		movs	r0, r5
 500 0080 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 501              	.LVL19:
 345:Core/Src/main.c ****   {
 502              		.loc 1 345 3 is_stmt 1 view .LVU167
 345:Core/Src/main.c ****   {
 503              		.loc 1 345 7 is_stmt 0 view .LVU168
 504 0084 0422     		movs	r2, #4
 505 0086 09A9     		add	r1, sp, #36
 506 0088 2800     		movs	r0, r5
 507 008a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 508              	.LVL20:
 349:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 509              		.loc 1 349 3 is_stmt 1 view .LVU169
 349:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 510              		.loc 1 349 40 is_stmt 0 view .LVU170
 511 008e 0194     		str	r4, [sp, #4]
 350:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 512              		.loc 1 350 3 is_stmt 1 view .LVU171
 350:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 513              		.loc 1 350 41 is_stmt 0 view .LVU172
 514 0090 0294     		str	r4, [sp, #8]
 351:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 515              		.loc 1 351 3 is_stmt 1 view .LVU173
 351:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 516              		.loc 1 351 34 is_stmt 0 view .LVU174
 517 0092 0394     		str	r4, [sp, #12]
 352:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 518              		.loc 1 352 3 is_stmt 1 view .LVU175
 352:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 519              		.loc 1 352 33 is_stmt 0 view .LVU176
 520 0094 0494     		str	r4, [sp, #16]
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 521              		.loc 1 353 3 is_stmt 1 view .LVU177
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 522              		.loc 1 353 35 is_stmt 0 view .LVU178
 523 0096 0594     		str	r4, [sp, #20]
 354:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 524              		.loc 1 354 3 is_stmt 1 view .LVU179
 354:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 525              		.loc 1 354 38 is_stmt 0 view .LVU180
 526 0098 8023     		movs	r3, #128
 527 009a 9B01     		lsls	r3, r3, #6
 528 009c 0693     		str	r3, [sp, #24]
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 21


 355:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 529              		.loc 1 355 3 is_stmt 1 view .LVU181
 355:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 530              		.loc 1 355 40 is_stmt 0 view .LVU182
 531 009e 0894     		str	r4, [sp, #32]
 356:Core/Src/main.c ****   {
 532              		.loc 1 356 3 is_stmt 1 view .LVU183
 356:Core/Src/main.c ****   {
 533              		.loc 1 356 7 is_stmt 0 view .LVU184
 534 00a0 01A9     		add	r1, sp, #4
 535 00a2 2800     		movs	r0, r5
 536 00a4 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 537              	.LVL21:
 363:Core/Src/main.c **** 
 538              		.loc 1 363 3 is_stmt 1 view .LVU185
 539 00a8 2800     		movs	r0, r5
 540 00aa FFF7FEFF 		bl	HAL_TIM_MspPostInit
 541              	.LVL22:
 365:Core/Src/main.c **** 
 542              		.loc 1 365 1 is_stmt 0 view .LVU186
 543 00ae 17B0     		add	sp, sp, #92
 544              		@ sp needed
 545 00b0 30BD     		pop	{r4, r5, pc}
 546              	.L12:
 547 00b2 C046     		.align	2
 548              	.L11:
 549 00b4 00000000 		.word	htim1
 550 00b8 002C0140 		.word	1073818624
 551 00bc 87130000 		.word	4999
 552              		.cfi_endproc
 553              	.LFE45:
 555              		.section	.text.MX_TIM14_Init,"ax",%progbits
 556              		.align	1
 557              		.syntax unified
 558              		.code	16
 559              		.thumb_func
 560              		.fpu softvfp
 562              	MX_TIM14_Init:
 563              	.LFB46:
 373:Core/Src/main.c **** 
 564              		.loc 1 373 1 is_stmt 1 view -0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 32
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568 0000 30B5     		push	{r4, r5, lr}
 569              	.LCFI7:
 570              		.cfi_def_cfa_offset 12
 571              		.cfi_offset 4, -12
 572              		.cfi_offset 5, -8
 573              		.cfi_offset 14, -4
 574 0002 89B0     		sub	sp, sp, #36
 575              	.LCFI8:
 576              		.cfi_def_cfa_offset 48
 379:Core/Src/main.c **** 
 577              		.loc 1 379 3 view .LVU188
 379:Core/Src/main.c **** 
 578              		.loc 1 379 22 is_stmt 0 view .LVU189
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 22


 579 0004 1C22     		movs	r2, #28
 580 0006 0021     		movs	r1, #0
 581 0008 01A8     		add	r0, sp, #4
 582 000a FFF7FEFF 		bl	memset
 583              	.LVL23:
 384:Core/Src/main.c ****   htim14.Init.Prescaler = 96-1;
 584              		.loc 1 384 3 is_stmt 1 view .LVU190
 384:Core/Src/main.c ****   htim14.Init.Prescaler = 96-1;
 585              		.loc 1 384 19 is_stmt 0 view .LVU191
 586 000e 104C     		ldr	r4, .L14
 587 0010 104B     		ldr	r3, .L14+4
 588 0012 2360     		str	r3, [r4]
 385:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 589              		.loc 1 385 3 is_stmt 1 view .LVU192
 385:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 590              		.loc 1 385 25 is_stmt 0 view .LVU193
 591 0014 5F23     		movs	r3, #95
 592 0016 6360     		str	r3, [r4, #4]
 386:Core/Src/main.c ****   htim14.Init.Period = 5000-1;
 593              		.loc 1 386 3 is_stmt 1 view .LVU194
 386:Core/Src/main.c ****   htim14.Init.Period = 5000-1;
 594              		.loc 1 386 27 is_stmt 0 view .LVU195
 595 0018 0025     		movs	r5, #0
 596 001a A560     		str	r5, [r4, #8]
 387:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 597              		.loc 1 387 3 is_stmt 1 view .LVU196
 387:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 598              		.loc 1 387 22 is_stmt 0 view .LVU197
 599 001c 0E4B     		ldr	r3, .L14+8
 600 001e E360     		str	r3, [r4, #12]
 388:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 601              		.loc 1 388 3 is_stmt 1 view .LVU198
 388:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 602              		.loc 1 388 29 is_stmt 0 view .LVU199
 603 0020 2561     		str	r5, [r4, #16]
 389:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 604              		.loc 1 389 3 is_stmt 1 view .LVU200
 389:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 605              		.loc 1 389 33 is_stmt 0 view .LVU201
 606 0022 A561     		str	r5, [r4, #24]
 390:Core/Src/main.c ****   {
 607              		.loc 1 390 3 is_stmt 1 view .LVU202
 390:Core/Src/main.c ****   {
 608              		.loc 1 390 7 is_stmt 0 view .LVU203
 609 0024 2000     		movs	r0, r4
 610 0026 FFF7FEFF 		bl	HAL_TIM_Base_Init
 611              	.LVL24:
 394:Core/Src/main.c ****   {
 612              		.loc 1 394 3 is_stmt 1 view .LVU204
 394:Core/Src/main.c ****   {
 613              		.loc 1 394 7 is_stmt 0 view .LVU205
 614 002a 2000     		movs	r0, r4
 615 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 616              	.LVL25:
 398:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 617              		.loc 1 398 3 is_stmt 1 view .LVU206
 398:Core/Src/main.c ****   sConfigOC.Pulse = 0;
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 23


 618              		.loc 1 398 20 is_stmt 0 view .LVU207
 619 0030 6023     		movs	r3, #96
 620 0032 0193     		str	r3, [sp, #4]
 399:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 621              		.loc 1 399 3 is_stmt 1 view .LVU208
 399:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 622              		.loc 1 399 19 is_stmt 0 view .LVU209
 623 0034 0295     		str	r5, [sp, #8]
 400:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 624              		.loc 1 400 3 is_stmt 1 view .LVU210
 400:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 625              		.loc 1 400 24 is_stmt 0 view .LVU211
 626 0036 5E3B     		subs	r3, r3, #94
 627 0038 0393     		str	r3, [sp, #12]
 401:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 628              		.loc 1 401 3 is_stmt 1 view .LVU212
 401:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 629              		.loc 1 401 24 is_stmt 0 view .LVU213
 630 003a 0595     		str	r5, [sp, #20]
 402:Core/Src/main.c ****   {
 631              		.loc 1 402 3 is_stmt 1 view .LVU214
 402:Core/Src/main.c ****   {
 632              		.loc 1 402 7 is_stmt 0 view .LVU215
 633 003c 0022     		movs	r2, #0
 634 003e 01A9     		add	r1, sp, #4
 635 0040 2000     		movs	r0, r4
 636 0042 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 637              	.LVL26:
 409:Core/Src/main.c **** 
 638              		.loc 1 409 3 is_stmt 1 view .LVU216
 639 0046 2000     		movs	r0, r4
 640 0048 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 641              	.LVL27:
 411:Core/Src/main.c **** 
 642              		.loc 1 411 1 is_stmt 0 view .LVU217
 643 004c 09B0     		add	sp, sp, #36
 644              		@ sp needed
 645 004e 30BD     		pop	{r4, r5, pc}
 646              	.L15:
 647              		.align	2
 648              	.L14:
 649 0050 00000000 		.word	htim14
 650 0054 00200040 		.word	1073750016
 651 0058 87130000 		.word	4999
 652              		.cfi_endproc
 653              	.LFE46:
 655              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 656              		.align	1
 657              		.syntax unified
 658              		.code	16
 659              		.thumb_func
 660              		.fpu softvfp
 662              	MX_USART1_UART_Init:
 663              	.LFB47:
 419:Core/Src/main.c **** 
 664              		.loc 1 419 1 is_stmt 1 view -0
 665              		.cfi_startproc
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 24


 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668 0000 10B5     		push	{r4, lr}
 669              	.LCFI9:
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 4, -8
 672              		.cfi_offset 14, -4
 428:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 673              		.loc 1 428 3 view .LVU219
 428:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 674              		.loc 1 428 19 is_stmt 0 view .LVU220
 675 0002 0948     		ldr	r0, .L17
 676 0004 094B     		ldr	r3, .L17+4
 677 0006 0360     		str	r3, [r0]
 429:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 678              		.loc 1 429 3 is_stmt 1 view .LVU221
 429:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 679              		.loc 1 429 24 is_stmt 0 view .LVU222
 680 0008 E123     		movs	r3, #225
 681 000a 5B02     		lsls	r3, r3, #9
 682 000c 4360     		str	r3, [r0, #4]
 430:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 683              		.loc 1 430 3 is_stmt 1 view .LVU223
 430:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 684              		.loc 1 430 26 is_stmt 0 view .LVU224
 685 000e 0023     		movs	r3, #0
 686 0010 8360     		str	r3, [r0, #8]
 431:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 687              		.loc 1 431 3 is_stmt 1 view .LVU225
 431:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 688              		.loc 1 431 24 is_stmt 0 view .LVU226
 689 0012 C360     		str	r3, [r0, #12]
 432:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 690              		.loc 1 432 3 is_stmt 1 view .LVU227
 432:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 691              		.loc 1 432 22 is_stmt 0 view .LVU228
 692 0014 0361     		str	r3, [r0, #16]
 433:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 693              		.loc 1 433 3 is_stmt 1 view .LVU229
 433:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 694              		.loc 1 433 20 is_stmt 0 view .LVU230
 695 0016 0C22     		movs	r2, #12
 696 0018 4261     		str	r2, [r0, #20]
 434:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 697              		.loc 1 434 3 is_stmt 1 view .LVU231
 434:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 698              		.loc 1 434 25 is_stmt 0 view .LVU232
 699 001a 8361     		str	r3, [r0, #24]
 435:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 700              		.loc 1 435 3 is_stmt 1 view .LVU233
 435:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 701              		.loc 1 435 28 is_stmt 0 view .LVU234
 702 001c C361     		str	r3, [r0, #28]
 436:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 703              		.loc 1 436 3 is_stmt 1 view .LVU235
 436:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 704              		.loc 1 436 30 is_stmt 0 view .LVU236
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 25


 705 001e 0362     		str	r3, [r0, #32]
 437:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 706              		.loc 1 437 3 is_stmt 1 view .LVU237
 437:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 707              		.loc 1 437 38 is_stmt 0 view .LVU238
 708 0020 4362     		str	r3, [r0, #36]
 438:Core/Src/main.c ****   {
 709              		.loc 1 438 3 is_stmt 1 view .LVU239
 438:Core/Src/main.c ****   {
 710              		.loc 1 438 7 is_stmt 0 view .LVU240
 711 0022 FFF7FEFF 		bl	HAL_UART_Init
 712              	.LVL28:
 446:Core/Src/main.c **** 
 713              		.loc 1 446 1 view .LVU241
 714              		@ sp needed
 715 0026 10BD     		pop	{r4, pc}
 716              	.L18:
 717              		.align	2
 718              	.L17:
 719 0028 00000000 		.word	huart1
 720 002c 00380140 		.word	1073821696
 721              		.cfi_endproc
 722              	.LFE47:
 724              		.global	__aeabi_idiv
 725              		.section	.text.mymap,"ax",%progbits
 726              		.align	1
 727              		.global	mymap
 728              		.syntax unified
 729              		.code	16
 730              		.thumb_func
 731              		.fpu softvfp
 733              	mymap:
 734              	.LVL29:
 735              	.LFB40:
  71:Core/Src/main.c ****   return (x - in_min) * (out_max - out_min)/(in_max - in_min) + out_min;
 736              		.loc 1 71 1 is_stmt 1 view -0
 737              		.cfi_startproc
 738              		@ args = 4, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
  71:Core/Src/main.c ****   return (x - in_min) * (out_max - out_min)/(in_max - in_min) + out_min;
 740              		.loc 1 71 1 is_stmt 0 view .LVU243
 741 0000 70B5     		push	{r4, r5, r6, lr}
 742              	.LCFI10:
 743              		.cfi_def_cfa_offset 16
 744              		.cfi_offset 4, -16
 745              		.cfi_offset 5, -12
 746              		.cfi_offset 6, -8
 747              		.cfi_offset 14, -4
 748 0002 1C00     		movs	r4, r3
 749 0004 04AB     		add	r3, sp, #16
 750              	.LVL30:
  71:Core/Src/main.c ****   return (x - in_min) * (out_max - out_min)/(in_max - in_min) + out_min;
 751              		.loc 1 71 1 view .LVU244
 752 0006 1B88     		ldrh	r3, [r3]
 753              	.LVL31:
  72:Core/Src/main.c **** }
 754              		.loc 1 72 3 is_stmt 1 view .LVU245
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 26


  72:Core/Src/main.c **** }
 755              		.loc 1 72 13 is_stmt 0 view .LVU246
 756 0008 451A     		subs	r5, r0, r1
  72:Core/Src/main.c **** }
 757              		.loc 1 72 34 view .LVU247
 758 000a 181B     		subs	r0, r3, r4
 759              	.LVL32:
  72:Core/Src/main.c **** }
 760              		.loc 1 72 23 view .LVU248
 761 000c 6843     		muls	r0, r5
  72:Core/Src/main.c **** }
 762              		.loc 1 72 53 view .LVU249
 763 000e 511A     		subs	r1, r2, r1
 764              	.LVL33:
  72:Core/Src/main.c **** }
 765              		.loc 1 72 44 view .LVU250
 766 0010 FFF7FEFF 		bl	__aeabi_idiv
 767              	.LVL34:
  72:Core/Src/main.c **** }
 768              		.loc 1 72 63 view .LVU251
 769 0014 2018     		adds	r0, r4, r0
 770 0016 80B2     		uxth	r0, r0
  73:Core/Src/main.c **** /* USER CODE END 0 */
 771              		.loc 1 73 1 view .LVU252
 772              		@ sp needed
 773 0018 70BD     		pop	{r4, r5, r6, pc}
 774              		.cfi_endproc
 775              	.LFE40:
 777              		.section	.text.SystemClock_Config,"ax",%progbits
 778              		.align	1
 779              		.global	SystemClock_Config
 780              		.syntax unified
 781              		.code	16
 782              		.thumb_func
 783              		.fpu softvfp
 785              	SystemClock_Config:
 786              	.LFB42:
 149:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 787              		.loc 1 149 1 is_stmt 1 view -0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 80
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791 0000 70B5     		push	{r4, r5, r6, lr}
 792              	.LCFI11:
 793              		.cfi_def_cfa_offset 16
 794              		.cfi_offset 4, -16
 795              		.cfi_offset 5, -12
 796              		.cfi_offset 6, -8
 797              		.cfi_offset 14, -4
 798 0002 94B0     		sub	sp, sp, #80
 799              	.LCFI12:
 800              		.cfi_def_cfa_offset 96
 150:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 801              		.loc 1 150 3 view .LVU254
 150:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 802              		.loc 1 150 22 is_stmt 0 view .LVU255
 803 0004 1822     		movs	r2, #24
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 27


 804 0006 0021     		movs	r1, #0
 805 0008 0AA8     		add	r0, sp, #40
 806 000a FFF7FEFF 		bl	memset
 807              	.LVL35:
 151:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 808              		.loc 1 151 3 is_stmt 1 view .LVU256
 151:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 809              		.loc 1 151 22 is_stmt 0 view .LVU257
 810 000e 1025     		movs	r5, #16
 811 0010 1022     		movs	r2, #16
 812 0012 0021     		movs	r1, #0
 813 0014 04A8     		add	r0, sp, #16
 814 0016 FFF7FEFF 		bl	memset
 815              	.LVL36:
 152:Core/Src/main.c **** 
 816              		.loc 1 152 3 is_stmt 1 view .LVU258
 152:Core/Src/main.c **** 
 817              		.loc 1 152 28 is_stmt 0 view .LVU259
 818 001a 1022     		movs	r2, #16
 819 001c 0021     		movs	r1, #0
 820 001e 6846     		mov	r0, sp
 821 0020 FFF7FEFF 		bl	memset
 822              	.LVL37:
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 823              		.loc 1 157 3 is_stmt 1 view .LVU260
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 824              		.loc 1 157 36 is_stmt 0 view .LVU261
 825 0024 1123     		movs	r3, #17
 826 0026 0893     		str	r3, [sp, #32]
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 827              		.loc 1 158 3 is_stmt 1 view .LVU262
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 828              		.loc 1 158 30 is_stmt 0 view .LVU263
 829 0028 103B     		subs	r3, r3, #16
 830 002a 0993     		str	r3, [sp, #36]
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 831              		.loc 1 159 3 is_stmt 1 view .LVU264
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 832              		.loc 1 159 32 is_stmt 0 view .LVU265
 833 002c 0D93     		str	r3, [sp, #52]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 834              		.loc 1 160 3 is_stmt 1 view .LVU266
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 835              		.loc 1 160 43 is_stmt 0 view .LVU267
 836 002e 0E95     		str	r5, [sp, #56]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 837              		.loc 1 161 3 is_stmt 1 view .LVU268
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 838              		.loc 1 161 34 is_stmt 0 view .LVU269
 839 0030 0226     		movs	r6, #2
 840 0032 1096     		str	r6, [sp, #64]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 841              		.loc 1 162 3 is_stmt 1 view .LVU270
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 842              		.loc 1 162 35 is_stmt 0 view .LVU271
 843 0034 8023     		movs	r3, #128
 844 0036 5B02     		lsls	r3, r3, #9
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 28


 845 0038 1193     		str	r3, [sp, #68]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 846              		.loc 1 163 3 is_stmt 1 view .LVU272
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 847              		.loc 1 163 32 is_stmt 0 view .LVU273
 848 003a 8023     		movs	r3, #128
 849 003c 5B03     		lsls	r3, r3, #13
 850 003e 1293     		str	r3, [sp, #72]
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 851              		.loc 1 164 3 is_stmt 1 view .LVU274
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 852              		.loc 1 164 32 is_stmt 0 view .LVU275
 853 0040 0024     		movs	r4, #0
 854 0042 1394     		str	r4, [sp, #76]
 165:Core/Src/main.c ****   {
 855              		.loc 1 165 3 is_stmt 1 view .LVU276
 165:Core/Src/main.c ****   {
 856              		.loc 1 165 7 is_stmt 0 view .LVU277
 857 0044 08A8     		add	r0, sp, #32
 858 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 859              	.LVL38:
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 860              		.loc 1 171 3 is_stmt 1 view .LVU278
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 861              		.loc 1 171 31 is_stmt 0 view .LVU279
 862 004a 0723     		movs	r3, #7
 863 004c 0493     		str	r3, [sp, #16]
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 864              		.loc 1 173 3 is_stmt 1 view .LVU280
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 865              		.loc 1 173 34 is_stmt 0 view .LVU281
 866 004e 0596     		str	r6, [sp, #20]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 867              		.loc 1 174 3 is_stmt 1 view .LVU282
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 868              		.loc 1 174 35 is_stmt 0 view .LVU283
 869 0050 0694     		str	r4, [sp, #24]
 175:Core/Src/main.c **** 
 870              		.loc 1 175 3 is_stmt 1 view .LVU284
 175:Core/Src/main.c **** 
 871              		.loc 1 175 36 is_stmt 0 view .LVU285
 872 0052 0794     		str	r4, [sp, #28]
 177:Core/Src/main.c ****   {
 873              		.loc 1 177 3 is_stmt 1 view .LVU286
 177:Core/Src/main.c ****   {
 874              		.loc 1 177 7 is_stmt 0 view .LVU287
 875 0054 0121     		movs	r1, #1
 876 0056 04A8     		add	r0, sp, #16
 877 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 878              	.LVL39:
 181:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 879              		.loc 1 181 3 is_stmt 1 view .LVU288
 181:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 880              		.loc 1 181 38 is_stmt 0 view .LVU289
 881 005c 2123     		movs	r3, #33
 882 005e 0093     		str	r3, [sp]
 182:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_SYSCLK;
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 29


 883              		.loc 1 182 3 is_stmt 1 view .LVU290
 182:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_SYSCLK;
 884              		.loc 1 182 38 is_stmt 0 view .LVU291
 885 0060 0294     		str	r4, [sp, #8]
 183:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 886              		.loc 1 183 3 is_stmt 1 view .LVU292
 183:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 887              		.loc 1 183 36 is_stmt 0 view .LVU293
 888 0062 0395     		str	r5, [sp, #12]
 184:Core/Src/main.c ****   {
 889              		.loc 1 184 3 is_stmt 1 view .LVU294
 184:Core/Src/main.c ****   {
 890              		.loc 1 184 7 is_stmt 0 view .LVU295
 891 0064 6846     		mov	r0, sp
 892 0066 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 893              	.LVL40:
 188:Core/Src/main.c **** 
 894              		.loc 1 188 1 view .LVU296
 895 006a 14B0     		add	sp, sp, #80
 896              		@ sp needed
 897 006c 70BD     		pop	{r4, r5, r6, pc}
 898              		.cfi_endproc
 899              	.LFE42:
 901              		.section	.text.main,"ax",%progbits
 902              		.align	1
 903              		.global	main
 904              		.syntax unified
 905              		.code	16
 906              		.thumb_func
 907              		.fpu softvfp
 909              	main:
 910              	.LFB41:
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 911              		.loc 1 81 1 is_stmt 1 view -0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915 0000 30B5     		push	{r4, r5, lr}
 916              	.LCFI13:
 917              		.cfi_def_cfa_offset 12
 918              		.cfi_offset 4, -12
 919              		.cfi_offset 5, -8
 920              		.cfi_offset 14, -4
 921 0002 83B0     		sub	sp, sp, #12
 922              	.LCFI14:
 923              		.cfi_def_cfa_offset 24
  88:Core/Src/main.c **** 
 924              		.loc 1 88 3 view .LVU298
 925 0004 FFF7FEFF 		bl	HAL_Init
 926              	.LVL41:
  95:Core/Src/main.c **** 
 927              		.loc 1 95 3 view .LVU299
 928 0008 FFF7FEFF 		bl	SystemClock_Config
 929              	.LVL42:
 102:Core/Src/main.c ****   MX_ADC_Init();
 930              		.loc 1 102 3 view .LVU300
 931 000c FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 30


 932              	.LVL43:
 103:Core/Src/main.c ****   MX_I2C1_Init();
 933              		.loc 1 103 3 view .LVU301
 934 0010 FFF7FEFF 		bl	MX_ADC_Init
 935              	.LVL44:
 104:Core/Src/main.c ****   MX_TIM1_Init();
 936              		.loc 1 104 3 view .LVU302
 937 0014 FFF7FEFF 		bl	MX_I2C1_Init
 938              	.LVL45:
 105:Core/Src/main.c ****   MX_USART1_UART_Init();
 939              		.loc 1 105 3 view .LVU303
 940 0018 FFF7FEFF 		bl	MX_TIM1_Init
 941              	.LVL46:
 106:Core/Src/main.c ****   MX_TIM14_Init();
 942              		.loc 1 106 3 view .LVU304
 943 001c FFF7FEFF 		bl	MX_USART1_UART_Init
 944              	.LVL47:
 107:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 945              		.loc 1 107 3 view .LVU305
 946 0020 FFF7FEFF 		bl	MX_TIM14_Init
 947              	.LVL48:
 109:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 948              		.loc 1 109 3 view .LVU306
 949 0024 0021     		movs	r1, #0
 950 0026 1D48     		ldr	r0, .L25
 951 0028 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 952              	.LVL49:
 110:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 953              		.loc 1 110 3 view .LVU307
 954 002c 1C4C     		ldr	r4, .L25+4
 955 002e 0021     		movs	r1, #0
 956 0030 2000     		movs	r0, r4
 957 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 958              	.LVL50:
 111:Core/Src/main.c **** 
 959              		.loc 1 111 3 view .LVU308
 960 0036 0421     		movs	r1, #4
 961 0038 2000     		movs	r0, r4
 962 003a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 963              	.LVL51:
 113:Core/Src/main.c ****   /* USER CODE END 2 */
 964              		.loc 1 113 3 view .LVU309
 113:Core/Src/main.c ****   /* USER CODE END 2 */
 965              		.loc 1 113 31 is_stmt 0 view .LVU310
 966 003e 0025     		movs	r5, #0
 967 0040 03E0     		b	.L23
 968              	.LVL52:
 969              	.L24:
 130:Core/Src/main.c ****       count = 0;
 970              		.loc 1 130 13 view .LVU311
 971 0042 1D00     		movs	r5, r3
 972              	.LVL53:
 973              	.L22:
 135:Core/Src/main.c **** 
 974              		.loc 1 135 5 is_stmt 1 view .LVU312
 975 0044 0120     		movs	r0, #1
 976 0046 FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 31


 977              	.LVL54:
 118:Core/Src/main.c ****   {
 978              		.loc 1 118 9 view .LVU313
 979              	.L23:
 118:Core/Src/main.c ****   {
 980              		.loc 1 118 3 view .LVU314
 120:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc,HAL_MAX_DELAY);
 981              		.loc 1 120 5 view .LVU315
 982 004a 164C     		ldr	r4, .L25+8
 983 004c 2000     		movs	r0, r4
 984 004e FFF7FEFF 		bl	HAL_ADC_Start
 985              	.LVL55:
 121:Core/Src/main.c ****     rawadc = HAL_ADC_GetValue(&hadc);
 986              		.loc 1 121 5 view .LVU316
 987 0052 0121     		movs	r1, #1
 988 0054 4942     		rsbs	r1, r1, #0
 989 0056 2000     		movs	r0, r4
 990 0058 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 991              	.LVL56:
 122:Core/Src/main.c **** 
 992              		.loc 1 122 5 view .LVU317
 122:Core/Src/main.c **** 
 993              		.loc 1 122 14 is_stmt 0 view .LVU318
 994 005c 2000     		movs	r0, r4
 995 005e FFF7FEFF 		bl	HAL_ADC_GetValue
 996              	.LVL57:
 122:Core/Src/main.c **** 
 997              		.loc 1 122 12 view .LVU319
 998 0062 80B2     		uxth	r0, r0
 999              	.LVL58:
 124:Core/Src/main.c **** 
 1000              		.loc 1 124 5 is_stmt 1 view .LVU320
 124:Core/Src/main.c **** 
 1001              		.loc 1 124 17 is_stmt 0 view .LVU321
 1002 0064 104B     		ldr	r3, .L25+12
 1003 0066 0093     		str	r3, [sp]
 1004 0068 0023     		movs	r3, #0
 1005 006a 104A     		ldr	r2, .L25+16
 1006 006c 0021     		movs	r1, #0
 1007 006e FFF7FEFF 		bl	mymap
 1008              	.LVL59:
 126:Core/Src/main.c **** 	  htim1.Instance->CCR1 = 2500;
 1009              		.loc 1 126 5 is_stmt 1 view .LVU322
 126:Core/Src/main.c **** 	  htim1.Instance->CCR1 = 2500;
 1010              		.loc 1 126 11 is_stmt 0 view .LVU323
 1011 0072 0A4B     		ldr	r3, .L25
 1012 0074 1B68     		ldr	r3, [r3]
 126:Core/Src/main.c **** 	  htim1.Instance->CCR1 = 2500;
 1013              		.loc 1 126 27 view .LVU324
 1014 0076 5863     		str	r0, [r3, #52]
 127:Core/Src/main.c **** 	  htim1.Instance->CCR2 = intensity;
 1015              		.loc 1 127 4 is_stmt 1 view .LVU325
 127:Core/Src/main.c **** 	  htim1.Instance->CCR2 = intensity;
 1016              		.loc 1 127 9 is_stmt 0 view .LVU326
 1017 0078 094B     		ldr	r3, .L25+4
 1018 007a 1B68     		ldr	r3, [r3]
 127:Core/Src/main.c **** 	  htim1.Instance->CCR2 = intensity;
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 32


 1019              		.loc 1 127 25 view .LVU327
 1020 007c 0C4A     		ldr	r2, .L25+20
 1021 007e 5A63     		str	r2, [r3, #52]
 128:Core/Src/main.c **** 
 1022              		.loc 1 128 4 is_stmt 1 view .LVU328
 128:Core/Src/main.c **** 
 1023              		.loc 1 128 25 is_stmt 0 view .LVU329
 1024 0080 9863     		str	r0, [r3, #56]
 130:Core/Src/main.c ****       count = 0;
 1025              		.loc 1 130 5 is_stmt 1 view .LVU330
 130:Core/Src/main.c ****       count = 0;
 1026              		.loc 1 130 13 is_stmt 0 view .LVU331
 1027 0082 6B1C     		adds	r3, r5, #1
 1028 0084 9BB2     		uxth	r3, r3
 1029              	.LVL60:
 130:Core/Src/main.c ****       count = 0;
 1030              		.loc 1 130 7 view .LVU332
 1031 0086 FA22     		movs	r2, #250
 1032 0088 9200     		lsls	r2, r2, #2
 1033 008a 9542     		cmp	r5, r2
 1034 008c D9D3     		bcc	.L24
 131:Core/Src/main.c ****       HAL_GPIO_TogglePin(LED_G0_GPIO_Port,LED_G0_Pin);
 1035              		.loc 1 131 7 is_stmt 1 view .LVU333
 1036              	.LVL61:
 132:Core/Src/main.c ****     }
 1037              		.loc 1 132 7 view .LVU334
 1038 008e 9020     		movs	r0, #144
 1039              	.LVL62:
 132:Core/Src/main.c ****     }
 1040              		.loc 1 132 7 is_stmt 0 view .LVU335
 1041 0090 0821     		movs	r1, #8
 1042 0092 C005     		lsls	r0, r0, #23
 1043 0094 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1044              	.LVL63:
 131:Core/Src/main.c ****       HAL_GPIO_TogglePin(LED_G0_GPIO_Port,LED_G0_Pin);
 1045              		.loc 1 131 13 view .LVU336
 1046 0098 0025     		movs	r5, #0
 1047 009a D3E7     		b	.L22
 1048              	.L26:
 1049              		.align	2
 1050              	.L25:
 1051 009c 00000000 		.word	htim14
 1052 00a0 00000000 		.word	htim1
 1053 00a4 00000000 		.word	hadc
 1054 00a8 88130000 		.word	5000
 1055 00ac FF0F0000 		.word	4095
 1056 00b0 C4090000 		.word	2500
 1057              		.cfi_endproc
 1058              	.LFE41:
 1060              		.section	.text.Error_Handler,"ax",%progbits
 1061              		.align	1
 1062              		.global	Error_Handler
 1063              		.syntax unified
 1064              		.code	16
 1065              		.thumb_func
 1066              		.fpu softvfp
 1068              	Error_Handler:
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 33


 1069              	.LFB49:
 485:Core/Src/main.c **** 
 486:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 487:Core/Src/main.c **** 
 488:Core/Src/main.c **** /* USER CODE END 4 */
 489:Core/Src/main.c **** 
 490:Core/Src/main.c **** /**
 491:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 492:Core/Src/main.c ****   * @retval None
 493:Core/Src/main.c ****   */
 494:Core/Src/main.c **** void Error_Handler(void)
 495:Core/Src/main.c **** {
 1070              		.loc 1 495 1 is_stmt 1 view -0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
 496:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 497:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 500:Core/Src/main.c **** }
 1075              		.loc 1 500 1 view .LVU338
 1076              		@ sp needed
 1077 0000 7047     		bx	lr
 1078              		.cfi_endproc
 1079              	.LFE49:
 1081              		.comm	huart1,128,4
 1082              		.comm	htim14,64,4
 1083              		.comm	htim1,64,4
 1084              		.comm	hi2c1,76,4
 1085              		.comm	hadc,64,4
 1086              		.text
 1087              	.Letext0:
 1088              		.file 2 "c:\\vsarm\\arm_embedded\\9 2020-q2-update\\arm-none-eabi\\include\\machine\\_default_type
 1089              		.file 3 "c:\\vsarm\\arm_embedded\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 1090              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1091              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030xc.h"
 1092              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1093              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1094              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1095              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 1096              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1097              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1098              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 1099              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 1100              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 1101              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 1102              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1103              		.file 17 "Core/Inc/main.h"
 1104              		.file 18 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 1105              		.file 19 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c_ex.h"
 1106              		.file 20 "<built-in>"
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:16     .text.MX_GPIO_Init:00000000 $t
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:164    .text.MX_GPIO_Init:00000090 $d
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:170    .text.MX_ADC_Init:00000000 $t
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:176    .text.MX_ADC_Init:00000000 MX_ADC_Init
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:280    .text.MX_ADC_Init:00000060 $d
                            *COM*:00000040 hadc
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:286    .text.MX_I2C1_Init:00000000 $t
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:292    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:358    .text.MX_I2C1_Init:00000038 $d
                            *COM*:0000004c hi2c1
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:365    .text.MX_TIM1_Init:00000000 $t
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:371    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:549    .text.MX_TIM1_Init:000000b4 $d
                            *COM*:00000040 htim1
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:556    .text.MX_TIM14_Init:00000000 $t
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:562    .text.MX_TIM14_Init:00000000 MX_TIM14_Init
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:649    .text.MX_TIM14_Init:00000050 $d
                            *COM*:00000040 htim14
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:656    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:662    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:719    .text.MX_USART1_UART_Init:00000028 $d
                            *COM*:00000080 huart1
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:726    .text.mymap:00000000 $t
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:733    .text.mymap:00000000 mymap
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:778    .text.SystemClock_Config:00000000 $t
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:785    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:902    .text.main:00000000 $t
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:909    .text.main:00000000 main
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:1051   .text.main:0000009c $d
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:1061   .text.Error_Handler:00000000 $t
C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s:1068   .text.Error_Handler:00000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
__aeabi_idiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
ARM GAS  C:\Users\clock\AppData\Local\Temp\cc3xhAUb.s 			page 35


HAL_TIM_PWM_Start
HAL_Delay
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_GPIO_TogglePin
